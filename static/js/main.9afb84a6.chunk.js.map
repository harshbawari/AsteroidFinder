{"version":3,"sources":["components/Head.js","components/RenderCard.js","components/Content.js","components/ChooseTimeRange.js","AsteroidFinder.js","serviceWorker.js","index.js"],"names":["Head","className","Component","RenderCard","props","state","object","console","log","this","name","estimated_diameter","meters","estimated_diameter_max","close_approach_data","close_approach_date_full","relative_velocity","kilometers_per_hour","miss_distance","kilometers","is_potentially_hazardous_asteroid","Content","neo","loading","objects","apiKey","url","date","y","getFullYear","m","getMonth","d","getDate","join","startDate","formatDateCustom","startdate","endDate","enddate","concaturl","finalUrl","concat","fetch","response","json","data","setState","Object","values","near_earth_objects","map","obj","i","length","renderObjects","key","id","ShowLoading","ChooseTimeRange","onChangeStart","canPass","onChangeEnd","submit","differenceInDays","a","b","Math","floor","getTime","alert","Date","sendContent","onChange","value","type","onClick","AsteroidFinder","dateReturned","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9afb84a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/head.css';\n\nclass Head extends Component {\n\n    render() {\n        return(\n            <div>\n                <div className=\"justify-content-center\">\n                    <h1>\n                        Asteroid Finder\n                    </h1>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Head;","import React, { Component } from 'react';\nimport '../styles/RenderCard.css';\n\nclass RenderCard extends Component {\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            object: null,\n        }\n    }\n\n    render() {\n        console.log(this.props);\n        return(\n            <div className=\"m-1\">\n                <div className=\"card bg-light\">\n                    <div className=\"card-header\">\n                        {this.props.object.name}\n                    </div>\n                    <div className=\"card-body\">\n                        <dl className=\"row justify-content-center\">\n                            <dt className=\"col-6\">Diameter</dt>\n                            <dd className=\"col-6\">{this.props.object.estimated_diameter.meters.estimated_diameter_max} meters</dd>\n\n                            <dt className=\"col-6\">Closest to Earth On</dt>\n                            <dd className=\"col-6\">{this.props.object.close_approach_data[0].close_approach_date_full}</dd>\n\n                            <dt className=\"col-6\">Relative Velocity</dt>\n                            <dd className=\"col-6\">{this.props.object.close_approach_data[0].relative_velocity.kilometers_per_hour} km/hr</dd>\n\n                            <dt className=\"col-6\">It will miss the Earth by</dt>\n                            <dd className=\"col-6\">{this.props.object.close_approach_data[0].miss_distance.kilometers} km</dd>\n\n                            <dt className=\"col-6\">Potentially Hazardous</dt>\n                            <dd className=\"col-6\">{this.props.object.is_potentially_hazardous_asteroid? <div className=\"badge badge-danger text-wrap\">Yes, run for your life!</div> : <span className=\"badge badge-success text-wrap\">No. Chill, you are safe!</span>}</dd>\n                        </dl>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RenderCard;","import React, { Component } from 'react';\nimport RenderCard from './RenderCard';\n\n\nclass Content extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            neo: null,\n            loading: true,\n            objects: [],\n            apiKey: '9btKaUMbolrOrzpJubGp9I1bQdcVtIlLyRzJGBU0',\n            url: 'https://api.nasa.gov/neo/rest/v1/feed?',\n        }\n\n    }\n\n    formatDateCustom(date) {\n        let y = date.getFullYear();\n        let m = date.getMonth() + 1;\n        let d = date.getDate();\n\n        if(m < 9)\n            m = '0' + m;\n        if(d < 10)\n            d = '0' + d;\n\n        return [y, m, d].join('-');\n    }\n\n    \n\n    async componentDidMount() {\n    \n        \n        \n        let startDate = this.formatDateCustom(this.props.startdate);\n        \n        let endDate = this.formatDateCustom(this.props.enddate);\n        \n        //https://api.nasa.gov/neo/rest/v1/feed?start_date=2015-09-07&end_date=2015-09-08&api_key=9btKaUMbolrOrzpJubGp9I1bQdcVtIlLyRzJGBU0\n        let concaturl = this.state.url;\n        \n        let finalUrl = concaturl.concat('start_date=', startDate, '&end_date=', endDate, '&api_key=', this.state.apiKey);\n    \n\n        const response = await fetch(finalUrl);\n        const data = await response.json();\n\n        this.setState ({ neo: Object.values(data.near_earth_objects) });\n        this.state.neo.map((obj) => this.setState({objects: obj}));\n\n        for(var i = 0; i < this.state.neo.length; i++) {\n\n            this.setState({\n                objects: this.state.objects.concat(Object.values(this.state.neo[i])),\n            })\n        }\n\n        this.setState({loading: false});\n    }\n\n    render(){\n\n        const renderObjects = this.state.objects.map((obj, i) => {\n            return(\n                <div className=\"col-12 col-sm-6 col-lg-4\">\n                    <RenderCard key={obj.id} object={obj} />\n                </div>\n            );\n        });\n\n        const ShowLoading = () => {\n            return(\n                <span className=\"badge badge-secondary\">Loading...</span>\n            );\n        }\n        \n\n        return(\n            <div className=\"row mt-5\">\n                {this.state.loading ? <ShowLoading /> : renderObjects}\n            </div>\n        );\n    }\n\n}\n\nexport default Content;","import React, { Component } from 'react';\nimport '../styles/ChooseTimeRange.css';\nimport DatePicker from 'react-date-picker';\nimport Content from './Content';\n\nclass ChooseTimeRange extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            startDate: new Date(),\n            endDate: new Date(),\n            canPass: false,\n        }\n    }\n\n    onChangeStart = startDate => {\n        this.setState({ startDate });\n        this.setState({ canPass: false });\n    };\n\n    onChangeEnd = endDate => {\n        this.setState({ endDate });\n        this.setState({ canPass: false });\n    };\n\n    submit = () => {\n\n        const differenceInDays = (a, b) => Math.floor(\n            (a.getTime() - b.getTime()) / (1000 * 60 * 60 * 24)\n        );\n\n\n        if( differenceInDays(this.state.endDate, this.state.startDate) < 0 ) {\n            alert(\"End Date cannot be smaller than Start Date!\");\n            this.setState({ canPass: false });\n        }\n        else if( differenceInDays(this.state.endDate, this.state.startDate ) > 7 ) {\n            alert(\"Maximum range is 7 days!\");\n            this.setState({ canPass: false });\n        }\n        else {\n            this.setState({ canPass: true });\n        }\n    }    \n\n    render() {\n        \n        const sendContent = this.state.canPass ? <Content startdate={this.state.startDate} enddate={this.state.endDate} /> : <div> </div>\n\n        return(\n            <div className=\"row justify-content-center align-items-center\">\n                <div className=\"col-12 col-md-6\">\n                    <DatePicker className=\"col-4 col-md-3 mb-4\"\n                        onChange={this.onChangeStart} \n                        value={this.state.startDate}\n                    />\n                    <DatePicker className=\"ml-md-5 ml-5 col-4 col-md-3\"\n                        onChange={this.onChangeEnd}\n                        value={this.state.endDate}\n                    />\n                </div>\n                <div className=\"col-6 offset-md-2 col-md-2\">\n                    <input type=\"submit\" className=\"btn btn-block btn-primary\" value=\"Submit\" onClick={this.submit} />\n                </div>\n                <div>\n                    {sendContent}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ChooseTimeRange;","import React, { Component } from 'react';\nimport './styles/AsteroidFinder.css';\nimport Head from './components/Head';\nimport ChooseTimeRange from './components/ChooseTimeRange';\n\n\nclass AsteroidFinder extends Component{\n\n  constructor() {\n    super();\n\n    this.state = {\n      startDate: null,\n      endDate: null,\n      dateReturned: false,\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"container-fluid\">\n        <Head />\n\n        <hr />\n\n        <div>\n          <p> \n            Curious to know which Asteroids are nearby you? \n            Select a range of date(max 7 days) to find Asteroids that will be close to earth during that time!\n          </p>\n        </div>\n\n        {!this.state.dateReturned &&\n          <ChooseTimeRange />\n        }\n\n        <hr />\n\n      </div>\n    );\n  }\n}\n\nexport default AsteroidFinder;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport './index.css';\nimport AsteroidFinder from './AsteroidFinder';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AsteroidFinder />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}